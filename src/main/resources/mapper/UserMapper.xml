<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
1.命名空间配置 全局唯一 包名+文件名
2.配置 Mapped Statement
3. statement 配置
id 值声明 statement 编号 同一命名空间(同一文件)下不可重复
parameterType 输入参数即占位符的数据类型 类型可以是 基本数据类型,字
符串,java bean ,map,list 等
resultType 输出结果 类型可以是基本数据类型,字符串,java bean,map
等
statement 描述 即待执行的 sql
#{id} 占位符 变量名为 id/value 均可 ${value} 变量名必须为 value
字符串拼接形式 无法避免 sql 注入
-->
<mapper namespace="org.example.mapper.UserMapper">

    <resultMap id="userMap" type="org.example.pojo.User">
        <result column="first_name" property="firstName"/>
        <result column="last_name" property="lastName"/>
        <result column="user_name" property="userName"/>
        <result column="email" property="email"/>
        <result column="role_id" property="roleId"/>
        <result column="role_name" property="roleName"/>
        <result column="age" property="age"/>
    </resultMap>

    <select id="getAllUsers" resultMap="userMap">
        SELECT * FROM users;
    </select>

    <select id="getUserByEmail" parameterType="string" resultType="org.example.pojo.User">
        SELECT * FROM users WHERE email = #{email}
    </select>

    <insert id="insertUser" parameterType="org.example.pojo.User">
        INSERT INTO users(first_name,last_name, user_name, email, role_id, role_name, age)
        VALUES (#{firstName}, #{lastName}, #{userName}, #{email}, #{roleId}, #{roleName}, #{age});
    </insert>

    <select id="checkUser" parameterMap="org.example.pojo.User">
        SELECT * FROM users WHERE email = #{email} AND password = #{password}
    </select>


</mapper>